{
  "openapi": "3.0.4",
  "info": {
    "title": "BankAccount",
    "version": "1.0"
  },
  "paths": {
    "/Account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Creates a new bank account.",
        "requestBody": {
          "description": "The account data to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Fully updates an existing bank account.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated account data (must include the account ID).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Deletes an account by its unique identifier.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The GUID of the account to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves an account by its unique identifier.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The GUID of the account to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Account/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves all accounts belonging to a specific owner.",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "The GUID of the account owner.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Account/exists": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Checks if an account exists for a given owner.",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "The GUID of the account owner to check.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Account/{accountId}": {
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Applies partial updates to an account identified by its GUID.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The GUID of the account to patch.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The patch request containing updated account data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAccountCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAccountCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAccountCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Account/{accountId}/statement": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves the account statement for the specified account within the given date range.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The unique identifier of the account.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The optional start date of the statement period (inclusive).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The optional end date of the statement period (inclusive).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of transactions for the specified period."
          },
          "400": {
            "description": "Returned when no transactions are found for the specified criteria."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountDto": {
        "required": [
          "currency",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid"
          },
          "ownerId": {
            "type": "string",
            "description": "Identifier of the account owner. Can be null.",
            "format": "uuid",
            "default": "00000000-0000-0000-0000-000000000000",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "balance": {
            "type": "number",
            "description": "Current balance of the account.",
            "format": "double"
          },
          "interestRate": {
            "type": "number",
            "description": "Interest rate applied to the account, if applicable. Can be null.",
            "format": "double",
            "nullable": true
          },
          "openDate": {
            "type": "string",
            "description": "Date when the account was opened.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "DTO representing a bank account."
      },
      "AccountType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "CreateAccountCommand": {
        "type": "object",
        "properties": {
          "accountDto": {
            "$ref": "#/components/schemas/AccountDto"
          }
        },
        "additionalProperties": false
      },
      "CurrencyType": {
        "enum": [
          "Rub",
          "Euro",
          "Usd"
        ],
        "type": "string"
      },
      "PatchAccountCommand": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "accountDto": {
            "$ref": "#/components/schemas/PatchAccountDto"
          }
        },
        "additionalProperties": false
      },
      "PatchAccountDto": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "UpdateAccountCommand": {
        "type": "object",
        "properties": {
          "accountDto": {
            "$ref": "#/components/schemas/AccountDto"
          }
        },
        "additionalProperties": false
      }
    }
  }
}