{
  "openapi": "3.0.4",
  "info": {
    "title": "BankAccount",
    "version": "1.0"
  },
  "paths": {
    "/Account/create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Creates a new bank account.",
        "requestBody": {
          "description": "The account data to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoMbResultActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoMbResultActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoMbResultActionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Account/{accountId}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Fully updates an existing bank account.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated account data (must include the account ID).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Deletes an account by its unique identifier.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The GUID of the account to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves an account by its unique identifier.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The GUID of the account to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoMbResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Applies partial updates to an account identified by its GUID.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The GUID of the account to patch.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The patch request containing updated account data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAccountCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAccountCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAccountCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Account/getAccounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves all accounts belonging to a specific owner.",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "The GUID of the account owner.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoListMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoListMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDtoListMbResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Account/{accountGuid}/exists": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Checks whether an account with the specified GUID exists.",
        "parameters": [
          {
            "name": "accountGuid",
            "in": "path",
            "description": "The unique identifier of the account to check.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              }
            }
          },
          "400": {
            "description": "Account does not exist or the request is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Account/{accountId}/statement": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves the account statement for the specified account within the given date range.",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The unique identifier of the account.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The optional start date of the statement period (inclusive).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The optional end date of the statement period (inclusive).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of transactions for the specified period.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionListMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionListMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionListMbResult"
                }
              }
            }
          },
          "400": {
            "description": "Returned when no transactions are found for the specified criteria.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Account/transfer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Performs a funds transfer between accounts.",
        "requestBody": {
          "description": "Transfer details including amount, source, and destination accounts.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransferDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanMbResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Transaction/{accountId}/transactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Registers a transaction for the specified account.",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "The ID of the account for which the transaction is registered.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "AccountId",
            "in": "path",
            "description": "The unique identifier of the account associated with the transaction.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Amount",
            "in": "query",
            "description": "The amount of the transaction.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Currency",
            "in": "query",
            "description": "The currency type of the transaction amount.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "The type of the transaction (e.g., debit, credit).",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionType"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "Optional description or note about the transaction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Timestamp",
            "in": "query",
            "description": "The date and time when the transaction occurred.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountDto": {
        "required": [
          "currency",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid"
          },
          "ownerId": {
            "type": "string",
            "description": "Identifier of the account owner. Can be null.",
            "format": "uuid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "balance": {
            "type": "number",
            "description": "Current balance of the account.",
            "format": "double"
          },
          "interestRate": {
            "type": "number",
            "description": "Interest rate applied to the account, if applicable. Can be null.",
            "format": "double",
            "nullable": true
          },
          "openDate": {
            "type": "string",
            "description": "Date when the account was opened.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "DTO representing a bank account."
      },
      "AccountDtoListMbResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountDtoMbResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AccountDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountDtoMbResultActionResult": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ActionResult"
          },
          "value": {
            "$ref": "#/components/schemas/AccountDtoMbResult"
          }
        },
        "additionalProperties": false
      },
      "AccountType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "BooleanMbResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAccountCommand": {
        "type": "object",
        "properties": {
          "accountDto": {
            "$ref": "#/components/schemas/AccountDto"
          }
        },
        "additionalProperties": false
      },
      "CurrencyType": {
        "enum": [
          "Rub",
          "Euro",
          "Usd"
        ],
        "type": "string"
      },
      "PatchAccountCommand": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "accountDto": {
            "$ref": "#/components/schemas/PatchAccountDto"
          }
        },
        "additionalProperties": false
      },
      "PatchAccountDto": {
        "type": "object",
        "properties": {
          "accountGuid": {
            "type": "string",
            "description": "Unique identifier of the account to be updated.",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "interestRate": {
            "type": "number",
            "description": "Optional new interest rate for the account.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object for partially updating account information."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Transaction": {
        "required": [
          "currency",
          "description"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "counterpartyAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "type": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TransactionListMbResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "TransferDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "The unique identifier of the account to transfer funds from.",
            "format": "uuid"
          },
          "to": {
            "type": "string",
            "description": "The unique identifier of the account to transfer funds to.",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "description": "The amount of money to transfer.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object representing a funds transfer request."
      },
      "UpdateAccountCommand": {
        "type": "object",
        "properties": {
          "accountDto": {
            "$ref": "#/components/schemas/AccountDto"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://localhost:18080/realms/mb-realm/protocol/openid-connect/auth",
            "tokenUrl": "http://localhost:18080/realms/mb-realm/protocol/openid-connect/token",
            "scopes": {
              "openid": "OpenID scope",
              "profile": "Profile scope"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "openid",
        "profile"
      ]
    }
  ]
}