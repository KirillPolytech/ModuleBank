<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BankAccount</name>
    </assembly>
    <members>
        <member name="M:BankAccount.Features.Controllers.AccountController.CreateAccount(BankAccount.Features.Accounts.Create.CreateAccountCommand)">
            <summary>
            Creates a new bank account.
            </summary>
            <param name="request">The account data to create.</param>
            <returns>The created account with a location URI.</returns>
        </member>
        <member name="M:BankAccount.Features.Controllers.AccountController.UpdateAccount(System.Guid,BankAccount.Features.Accounts.Update.UpdateAccountCommand)">
            <summary>
            Fully updates an existing bank account.
            </summary>
            <param name="accountId"></param>
            <param name="request">The updated account data (must include the account ID).</param>
            <returns>The updated account, or BadRequest if the account does not exist.</returns>
        </member>
        <member name="M:BankAccount.Features.Controllers.AccountController.DeleteAccount(System.Guid)">
            <summary>
            Deletes an account by its unique identifier.
            </summary>
            <param name="accountId">The GUID of the account to delete.</param>
            <returns>
            Returns BadRequest if deletion failed, otherwise returns Ok with the result.
            </returns>
        </member>
        <member name="M:BankAccount.Features.Controllers.AccountController.GetAccount(System.Guid)">
            <summary>
            Retrieves an account by its unique identifier.
            </summary>
            <param name="accountId">The GUID of the account to retrieve.</param>
            <returns>
            Returns BadRequest if the account is not found, otherwise returns Ok with the account data.
            </returns>
        </member>
        <member name="M:BankAccount.Features.Controllers.AccountController.GetAccounts(System.Guid)">
            <summary>
            Retrieves all accounts belonging to a specific owner.
            </summary>
            <param name="ownerId">The GUID of the account owner.</param>
            <returns>
            Returns BadRequest if no accounts are found, otherwise returns Ok with the list of accounts.
            </returns>
        </member>
        <member name="M:BankAccount.Features.Controllers.AccountController.CheckAccountExists(System.Guid)">
            <summary>
            Checks if an account exists for a given owner.
            </summary>
            <param name="ownerId">The GUID of the account owner to check.</param>
            <returns>
            Returns BadRequest if no account is found, otherwise returns Ok with the account data.
            </returns>
        </member>
        <member name="M:BankAccount.Features.Controllers.AccountController.PatchAccount(System.Guid,BankAccount.Features.Accounts.Patch.PatchAccountCommand)">
            <summary>
            Applies partial updates to an account identified by its GUID.
            </summary>
            <param name="accountId">The GUID of the account to patch.</param>
            <param name="request">The patch request containing updated account data.</param>
            <returns>
            Returns BadRequest if the patch operation failed, otherwise returns Ok with the result.
            </returns>
        </member>
        <member name="M:BankAccount.Features.Controllers.AccountController.GetAccountStatement(System.Guid,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Retrieves the account statement for the specified account within the given date range.
            </summary>
            <param name="accountId">The unique identifier of the account.</param>
            <param name="from">The optional start date of the statement period (inclusive).</param>
            <param name="to">The optional end date of the statement period (inclusive).</param>
            <returns>
            Returns a list of transactions if found; otherwise, returns a <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/>.
            </returns>
            <response code="200">Returns the list of transactions for the specified period.</response>
            <response code="400">Returned when no transactions are found for the specified criteria.</response>
        </member>
        <member name="T:BankAccount.Features.Models.DTOs.AccountDto">
            <summary>
            DTO representing a bank account.
            </summary>
        </member>
        <member name="P:BankAccount.Features.Models.DTOs.AccountDto.Id">
            <summary>
            Unique identifier of the account.
            </summary>
        </member>
        <member name="P:BankAccount.Features.Models.DTOs.AccountDto.OwnerId">
            <summary>
            Identifier of the account owner. Can be null.
            </summary>
        </member>
        <member name="P:BankAccount.Features.Models.DTOs.AccountDto.Type">
            <summary>
            Type of the account (e.g., savings, deposit).
            </summary>
        </member>
        <member name="P:BankAccount.Features.Models.DTOs.AccountDto.Currency">
            <summary>
            Currency of the account.
            </summary>
        </member>
        <member name="P:BankAccount.Features.Models.DTOs.AccountDto.Balance">
            <summary>
            Current balance of the account.
            </summary>
        </member>
        <member name="P:BankAccount.Features.Models.DTOs.AccountDto.InterestRate">
            <summary>
            Interest rate applied to the account, if applicable. Can be null.
            </summary>
        </member>
        <member name="P:BankAccount.Features.Models.DTOs.AccountDto.OpenDate">
            <summary>
            Date when the account was opened.
            </summary>
        </member>
    </members>
</doc>
